# QKM postgres config starts here

postgresqlUsername: postgres
postgresqlPassword: "1234567890"
postgresqlDatabase: {{ .Values.qkm.postgresql.database }}

postgresqlMaxConnections: 100
tls:
  enabled: {{ .Values.qkm.postgresql.tls.enabled }}
{{ if .Values.qkm.postgresql.tls.enabled }}
# Configuration below requires that you execute the following command before running the chart
# kubectl create secret generic postgres-certificates-tls-secret --from-file=./server.crt --from-file=./server.key --from-file=./ca.crt -n $YOUR_NAMESPACE
#  certificatesSecret: "postgres-certificates-tls-secret"
#  certFilename: "server.crt"
#  certKeyFilename: "server.key"
# Remove value below if you don't require clients certificates
#  certCAFilename: "ca.crt"
  autoGenerated: true
# volumePermissions are required in order to have tls running as expected
volumePermissions:
  enabled: true
{{ end }}

initdbScripts:
  10_setup.sql: |
    CREATE DATABASE {{ .Values.qkm.postgresql.database }};
    BEGIN;
    CREATE TABLE IF NOT EXISTS secrets (
        pk SERIAL PRIMARY KEY,
        id TEXT NOT NULL,
        version TEXT NOT NULL,
        store_id TEXT NOT NULL,
        disabled BOOLEAN default false,
        tags JSONB,
        created_at TIMESTAMPTZ DEFAULT (now() at time zone 'utc') NOT NULL,
        updated_at TIMESTAMPTZ DEFAULT (now() at time zone 'utc') NOT NULL,
        deleted_at TIMESTAMPTZ,
        UNIQUE(id, version, store_id)
    );

    CREATE TABLE IF NOT EXISTS keys (
        pk SERIAL PRIMARY KEY,
        id TEXT NOT NULL,
        store_id TEXT NOT NULL,
        public_key BYTEA NOT NULL,
        signing_algorithm TEXT NOT NULL,
        elliptic_curve TEXT NOT NULL,
        tags JSONB,
        annotations JSONB,
        disabled BOOLEAN default false,
        created_at TIMESTAMPTZ DEFAULT (now() at time zone 'utc') NOT NULL,
        updated_at TIMESTAMPTZ DEFAULT (now() at time zone 'utc') NOT NULL,
        deleted_at TIMESTAMPTZ,
        UNIQUE(id, store_id)
    );

    CREATE TABLE IF NOT EXISTS eth_accounts (
        pk SERIAL PRIMARY KEY,
        address TEXT NOT NULL,
        store_id TEXT NOT NULL,
        key_id TEXT NOT NULL,
        public_key BYTEA NOT NULL,
        compressed_public_key BYTEA NOT NULL,
        tags JSONB,
        disabled BOOLEAN default false,
        created_at TIMESTAMPTZ DEFAULT (now() at time zone 'utc') NOT NULL,
        updated_at TIMESTAMPTZ DEFAULT (now() at time zone 'utc') NOT NULL,
        deleted_at TIMESTAMPTZ,
        UNIQUE(address, store_id)
    );

    CREATE TABLE IF NOT EXISTS aliases (
        pk SERIAL PRIMARY KEY,
        key TEXT NOT NULL,
        registry_name TEXT NOT NULL,
        value TEXT NOT NULL,
        UNIQUE(key, registry_name)
    );

    COMMIT;

{{ if .Values.observability.enabled }}
metrics.enabled: true
{{ end }}