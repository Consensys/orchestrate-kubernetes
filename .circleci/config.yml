version: 2.1

orbs:
  go: circleci/go@1.5.0
  aws-eks: circleci/aws-eks@2.2.0
  helm: circleci/helm@1.2.0

commands:
  init:
    description: "Install"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          authenticator-release-tag: 0.5.3
          install-kubectl: true
          cluster-name: ${AWS_EKS_CLUSTER_NAME}
      - helm/install-helm-client:
          version: v3.3.4
      - run:
          name: Install helm plugins
          command: helm plugin install https://github.com/databus23/helm-diff
      - run:
          name: Install helmfile
          command: |
            curl -L --fail --retry 3 -o ./helmfile  https://github.com/roboll/helmfile/releases/download/v0.130.0/helmfile_linux_amd64
            chmod +x ./helmfile
            sudo mv ./helmfile /usr/local/bin/helmfile

parameters:
  orchestrate-namespace:
    type: string
    default: ""
  orchestrate-tag:
    type: string
    default: ""


jobs:
  lint:
    executor:
      name: go/default
      tag: '1.16.8'
    steps:
      - init
      - run:
          name: helmfile lint
          command: helmfile -e ${ENVIRONMENT_VALUES} -f helmfile-core.yaml lint
  validate:
    executor:
      name: go/default
      tag: '1.16.8'
    steps:
      - init
      - run:
          name: helmfile validate
          command: helmfile -e ${ENVIRONMENT_VALUES} -f helmfile-core.yaml template --validate

  deploy:
    executor:
      name: go/default
      tag: '1.16.8'
    parameters:
      docker-image-registry:
        type: string
      docker-user:
        type: string
      docker-password:
        type: string
      kafka-sasl-password:
        type: string
    steps:
      - init
      - run:
          name: helmfile apply
          command: |
            export KAFKA_SASL_PASSWORD="<< parameters.kafka-sasl-password >>"
            export REGISTRY_URL="<< parameters.docker-image-registry >>"
            export REGISTRY_USERNAME="<< parameters.docker-user >>"
            export REGISTRY_PASSWORD="<< parameters.docker-password >>"
            export ORCHESTRATE_TAG="<< pipeline.parameters.orchestrate-tag >>"
            export ORCHESTRATE_REPOSITORY="<< parameters.docker-image-registry >>/orchestrate"
            export ORCHESTRATE_NAMESPACE="<< pipeline.parameters.orchestrate-namespace >>"
            export ENVIRONMENT_VALUES="<< pipeline.parameters.orchestrate-namespace >>"
            helmfile -e << pipeline.parameters.orchestrate-namespace >> -f helmfile-core.yaml apply --suppress-secrets --detailed-exitcode=false --concurrency 1

workflows:
  default:
    jobs:
      - lint:
          filters:
            branches:
              ignore:
                - master
      - validate:
          filters:
            branches:
              ignore:
                - master
          requires:
            - lint

  circleci-api-qa:
    when:
      equal: [ qa, << pipeline.parameters.orchestrate-namespace >> ]
    jobs:
      - deploy:
          context:
            - cloudsmith-tanuki-rw
            - tanuki-deps-rw
          kafka-sasl-password: ${QA_KAFKA_SASL_PASSWORD}
          docker-password: ${CLOUDSMITH_PASS_RW}
          docker-user: ${CLOUDSMITH_USER_RW}
          docker-image-registry: ${CLOUDSMITH_DEV_REPO}

  circleci-api-staging:
    when:
      equal: [ staging, << pipeline.parameters.orchestrate-namespace >> ]
    jobs:
      - deploy:
          context:
            - cloudsmith-tanuki-rw
            - tanuki-deps-rw
          kafka-sasl-password: ${STAGING_KAFKA_SASL_PASSWORD}
          docker-password: ${CLOUDSMITH_PASS_RW}
          docker-user: ${CLOUDSMITH_USER_RW}
          docker-image-registry: ${CLOUDSMITH_DEV_REPO}
